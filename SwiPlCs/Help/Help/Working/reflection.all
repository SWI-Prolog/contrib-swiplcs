<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="IKernDll_PtwAgsCLR">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Copyright ©  2013</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>IKernDll_PtwAgsCLR</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTrademarkAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>IKernDll_PtwAgsCLR</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>7fe7bddd-65d6-4101-9184-f7676a16091e</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:IKernDll_PtwAgsCLR">
      <apidata name="IKernDll_PtwAgsCLR" group="namespace" />
      <elements>
        <element api="T:IKernDll_PtwAgsCLR.AntwortListe" />
        <element api="T:IKernDll_PtwAgsCLR.IAntwort" />
        <element api="T:IKernDll_PtwAgsCLR.SBSException" />
        <element api="T:IKernDll_PtwAgsCLR.SBSInterfaceException" />
        <element api="T:IKernDll_PtwAgsCLR.FrageList" />
        <element api="T:IKernDll_PtwAgsCLR.FrageTyp" />
        <element api="T:IKernDll_PtwAgsCLR.IFrage" />
        <element api="T:IKernDll_PtwAgsCLR.IFrageText" />
        <element api="T:IKernDll_PtwAgsCLR.IFrageChoice" />
        <element api="T:IKernDll_PtwAgsCLR.IFrageCombo" />
        <element api="T:IKernDll_PtwAgsCLR.IFrageZusatzleistungsGruppe" />
        <element api="T:IKernDll_PtwAgsCLR.VorbelegungPropertyValueCollection" />
        <element api="T:IKernDll_PtwAgsCLR.IFrageVorbelegung" />
        <element api="T:IKernDll_PtwAgsCLR.IFrageZusatzleistung" />
        <element api="T:IKernDll_PtwAgsCLR.IKernDll" />
      </elements>
    </api>
    <api id="T:IKernDll_PtwAgsCLR.AntwortListe">
      <apidata name="AntwortListe" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:IKernDll_PtwAgsCLR.AntwortListe.FindById(System.String)" />
        <element api="M:IKernDll_PtwAgsCLR.AntwortListe.FindByNumber(System.String)" />
        <element api="M:IKernDll_PtwAgsCLR.AntwortListe.#ctor" />
        <element api="P:IKernDll_PtwAgsCLR.AntwortListe.Item(System.String)" />
        <element api="P:System.Collections.Generic.List`1.Item(System.Int32)">
          <apidata name="Item" group="member" subgroup="property" />
          <memberdata visibility="public" default="true" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Item">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <setter name="set_Item">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </setter>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.IList`1.Item(System.Int32)">
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </member>
            <member api="P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)">
              <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Add(`0)">
          <apidata name="Add" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)">
          <apidata name="Add" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="item">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Add(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <apidata name="AddRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="collection">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.AsReadOnly">
          <apidata name="AsReadOnly" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <apidata name="BinarySearch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <apidata name="BinarySearch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <apidata name="BinarySearch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.Collections.Generic.ICollection`1.Clear">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Collections.Generic.IList`1" />
                </specialization>
              </type>
            </member>
            <member api="M:System.Collections.IList.Clear">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Contains(`0)">
          <apidata name="Contains" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)">
          <apidata name="Contains" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="item">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Contains(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})">
          <apidata name="ConvertAll" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TOutput" />
          </templates>
          <parameters>
            <parameter name="converter">
              <type api="T:System.Converter`2" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                  <template name="TOutput" index="0" api="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="TOutput" index="0" api="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.CopyTo(`0[])">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="array">
              <arrayOf rank="1">
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="array">
              <arrayOf rank="1">
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </arrayOf>
            </parameter>
            <parameter name="arrayIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <arrayOf rank="1">
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </arrayOf>
            </parameter>
            <parameter name="arrayIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="arrayIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})">
          <apidata name="Exists" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <apidata name="Find" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <apidata name="FindAll" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})">
          <apidata name="FindIndex" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})">
          <apidata name="FindIndex" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="startIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <apidata name="FindIndex" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="startIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <apidata name="FindLast" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <apidata name="FindLastIndex" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})">
          <apidata name="FindLastIndex" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="startIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <apidata name="FindLastIndex" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="startIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})">
          <apidata name="ForEach" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Collections.Generic.List`1.Enumerator" ref="false">
              <type api="T:System.Collections.Generic.List`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Collections.Generic.ICollection`1" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Collections.IEnumerable.GetEnumerator">
              <type api="T:System.Collections.IEnumerable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
          <apidata name="GetRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.IndexOf(`0)">
          <apidata name="IndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.IList`1.IndexOf(`0)">
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)">
          <apidata name="IndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
          <apidata name="IndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)">
          <apidata name="IndexOf" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="item">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.IndexOf(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)">
          <apidata name="Insert" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)">
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <apidata name="Insert" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="item">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <apidata name="InsertRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="collection">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0)">
          <apidata name="LastIndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)">
          <apidata name="LastIndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
          <apidata name="LastIndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Remove(`0)">
          <apidata name="Remove" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)">
          <apidata name="Remove" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="item">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Remove(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})">
          <apidata name="RemoveAll" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)">
          <apidata name="RemoveAt" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)">
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </member>
            <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)">
          <apidata name="RemoveRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Reverse">
          <apidata name="Reverse" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)">
          <apidata name="Reverse" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Sort">
          <apidata name="Sort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <apidata name="Sort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <apidata name="Sort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <apidata name="Sort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="comparison">
              <type api="T:System.Comparison`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.ToArray">
          <apidata name="ToArray" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <arrayOf rank="1">
              <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.TrimExcess">
          <apidata name="TrimExcess" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})">
          <apidata name="TrueForAll" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.Capacity">
          <apidata name="Capacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Capacity">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <setter name="set_Capacity" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Count">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.ICollection`1.Count">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Collections.Generic.IList`1" />
                </specialization>
              </type>
            </member>
            <member api="P:System.Collections.ICollection.Count">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
            <member api="P:System.Collections.Generic.IReadOnlyCollection`1.Count">
              <type api="T:System.Collections.Generic.IReadOnlyCollection`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Collections.Generic.IReadOnlyList`1" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize">
          <apidata name="IsFixedSize" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.IList.IsFixedSize" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsFixedSize">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
          <apidata name="IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Collections.Generic.IList`1" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly">
          <apidata name="IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.IList.IsReadOnly">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsReadOnly">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized">
          <apidata name="IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.ICollection.IsSynchronized" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot">
          <apidata name="SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.ICollection.SyncRoot" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)">
          <apidata name="Item" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" set="true" />
          <getter name="get_System.Collections.IList.Item" />
          <setter name="set_System.Collections.IList.Item" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.Item(System.Int32)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
      </containers>
    </api>
    <api id="M:IKernDll_PtwAgsCLR.AntwortListe.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.AntwortListe" ref="true" />
      </containers>
    </api>
    <api id="M:IKernDll_PtwAgsCLR.AntwortListe.FindById(System.String)">
      <apidata name="FindById" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="antId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
      </returns>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.AntwortListe" ref="true" />
      </containers>
    </api>
    <api id="M:IKernDll_PtwAgsCLR.AntwortListe.FindByNumber(System.String)">
      <apidata name="FindByNumber" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="wert">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
      </returns>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.AntwortListe" ref="true" />
      </containers>
    </api>
    <api id="P:IKernDll_PtwAgsCLR.AntwortListe.Item(System.String)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="antwortText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
      </returns>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.AntwortListe" ref="true" />
      </containers>
    </api>
    <api id="T:IKernDll_PtwAgsCLR.FrageList">
      <apidata name="FrageList" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:IKernDll_PtwAgsCLR.FrageList.#ctor" />
        <element api="P:IKernDll_PtwAgsCLR.FrageList.LetzteFrage" />
        <element api="P:IKernDll_PtwAgsCLR.FrageList.Item(System.String)" />
        <element api="P:System.Collections.Generic.List`1.Item(System.Int32)">
          <apidata name="Item" group="member" subgroup="property" />
          <memberdata visibility="public" default="true" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Item">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <setter name="set_Item">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </setter>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.IList`1.Item(System.Int32)">
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </member>
            <member api="P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)">
              <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Add(`0)">
          <apidata name="Add" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)">
          <apidata name="Add" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="item">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Add(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <apidata name="AddRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="collection">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.AsReadOnly">
          <apidata name="AsReadOnly" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
          <apidata name="BinarySearch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.BinarySearch(`0)">
          <apidata name="BinarySearch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
          <apidata name="BinarySearch" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.Collections.Generic.ICollection`1.Clear">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Collections.Generic.IList`1" />
                </specialization>
              </type>
            </member>
            <member api="M:System.Collections.IList.Clear">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Contains(`0)">
          <apidata name="Contains" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)">
          <apidata name="Contains" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="item">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.Contains(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})">
          <apidata name="ConvertAll" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TOutput" />
          </templates>
          <parameters>
            <parameter name="converter">
              <type api="T:System.Converter`2" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                  <template name="TOutput" index="0" api="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="TOutput" index="0" api="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.CopyTo(`0[])">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="array">
              <arrayOf rank="1">
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="array">
              <arrayOf rank="1">
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </arrayOf>
            </parameter>
            <parameter name="arrayIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="array">
              <arrayOf rank="1">
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </arrayOf>
            </parameter>
            <parameter name="arrayIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="arrayIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})">
          <apidata name="Exists" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
          <apidata name="Find" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
          <apidata name="FindAll" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})">
          <apidata name="FindIndex" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})">
          <apidata name="FindIndex" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="startIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <apidata name="FindIndex" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="startIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
          <apidata name="FindLast" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
          <apidata name="FindLastIndex" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})">
          <apidata name="FindLastIndex" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="startIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
          <apidata name="FindLastIndex" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="startIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})">
          <apidata name="ForEach" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Collections.Generic.List`1.Enumerator" ref="false">
              <type api="T:System.Collections.Generic.List`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Collections.Generic.ICollection`1" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Collections.IEnumerable.GetEnumerator">
              <type api="T:System.Collections.IEnumerable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
          <apidata name="GetRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.IndexOf(`0)">
          <apidata name="IndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.IList`1.IndexOf(`0)">
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)">
          <apidata name="IndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
          <apidata name="IndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)">
          <apidata name="IndexOf" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="item">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IList.IndexOf(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)">
          <apidata name="Insert" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)">
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)">
          <apidata name="Insert" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="item">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <apidata name="InsertRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="collection">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0)">
          <apidata name="LastIndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)">
          <apidata name="LastIndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
          <apidata name="LastIndexOf" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Remove(`0)">
          <apidata name="Remove" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="item">
              <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)">
          <apidata name="Remove" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="item">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IList.Remove(System.Object)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})">
          <apidata name="RemoveAll" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)">
          <apidata name="RemoveAt" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)">
              <type api="T:System.Collections.Generic.IList`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </member>
            <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)">
          <apidata name="RemoveRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Reverse">
          <apidata name="Reverse" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)">
          <apidata name="Reverse" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Sort">
          <apidata name="Sort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
          <apidata name="Sort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
          <apidata name="Sort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
          <apidata name="Sort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="comparison">
              <type api="T:System.Comparison`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.ToArray">
          <apidata name="ToArray" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <arrayOf rank="1">
              <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.TrimExcess">
          <apidata name="TrimExcess" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})">
          <apidata name="TrueForAll" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="match">
              <type api="T:System.Predicate`1" ref="true">
                <specialization>
                  <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.Capacity">
          <apidata name="Capacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Capacity">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <setter name="set_Capacity" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Count">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.ICollection`1.Count">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Collections.Generic.IList`1" />
                </specialization>
              </type>
            </member>
            <member api="P:System.Collections.ICollection.Count">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
            <member api="P:System.Collections.Generic.IReadOnlyCollection`1.Count">
              <type api="T:System.Collections.Generic.IReadOnlyCollection`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Collections.Generic.IReadOnlyList`1" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize">
          <apidata name="IsFixedSize" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.IList.IsFixedSize" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsFixedSize">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
          <apidata name="IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Collections.Generic.IList`1" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly">
          <apidata name="IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.IList.IsReadOnly">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.IsReadOnly">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized">
          <apidata name="IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.ICollection.IsSynchronized" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot">
          <apidata name="SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.ICollection.SyncRoot" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)">
          <apidata name="Item" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" set="true" />
          <getter name="get_System.Collections.IList.Item" />
          <setter name="set_System.Collections.IList.Item" />
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IList.Item(System.Int32)">
              <type api="T:System.Collections.IList" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
      </containers>
    </api>
    <api id="M:IKernDll_PtwAgsCLR.FrageList.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.FrageList" ref="true" />
      </containers>
    </api>
    <api id="P:IKernDll_PtwAgsCLR.FrageList.Item(System.String)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="frageName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
      </returns>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.FrageList" ref="true" />
      </containers>
    </api>
    <api id="P:IKernDll_PtwAgsCLR.FrageList.LetzteFrage">
      <apidata name="LetzteFrage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LetzteFrage" />
      <returns>
        <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
      </returns>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.FrageList" ref="true" />
      </containers>
    </api>
    <api id="T:IKernDll_PtwAgsCLR.FrageTyp">
      <apidata name="FrageTyp" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:IKernDll_PtwAgsCLR.FrageTyp.none" />
        <element api="F:IKernDll_PtwAgsCLR.FrageTyp.block" />
        <element api="F:IKernDll_PtwAgsCLR.FrageTyp.text" />
        <element api="F:IKernDll_PtwAgsCLR.FrageTyp.vorbelegung" />
        <element api="F:IKernDll_PtwAgsCLR.FrageTyp.choice" />
        <element api="F:IKernDll_PtwAgsCLR.FrageTyp.combo" />
        <element api="F:IKernDll_PtwAgsCLR.FrageTyp.zusatzleistung" />
        <element api="F:IKernDll_PtwAgsCLR.FrageTyp.zusatzleistungsGruppe" />
      </elements>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
      </containers>
    </api>
    <api id="F:IKernDll_PtwAgsCLR.FrageTyp.block">
      <apidata name="block" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:IKernDll_PtwAgsCLR.FrageTyp" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.FrageTyp" ref="false" />
      </containers>
    </api>
    <api id="F:IKernDll_PtwAgsCLR.FrageTyp.choice">
      <apidata name="choice" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:IKernDll_PtwAgsCLR.FrageTyp" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.FrageTyp" ref="false" />
      </containers>
    </api>
    <api id="F:IKernDll_PtwAgsCLR.FrageTyp.combo">
      <apidata name="combo" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:IKernDll_PtwAgsCLR.FrageTyp" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.FrageTyp" ref="false" />
      </containers>
    </api>
    <api id="F:IKernDll_PtwAgsCLR.FrageTyp.none">
      <apidata name="none" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:IKernDll_PtwAgsCLR.FrageTyp" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.FrageTyp" ref="false" />
      </containers>
    </api>
    <api id="F:IKernDll_PtwAgsCLR.FrageTyp.text">
      <apidata name="text" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:IKernDll_PtwAgsCLR.FrageTyp" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.FrageTyp" ref="false" />
      </containers>
    </api>
    <api id="F:IKernDll_PtwAgsCLR.FrageTyp.vorbelegung">
      <apidata name="vorbelegung" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:IKernDll_PtwAgsCLR.FrageTyp" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.FrageTyp" ref="false" />
      </containers>
    </api>
    <api id="F:IKernDll_PtwAgsCLR.FrageTyp.zusatzleistung">
      <apidata name="zusatzleistung" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:IKernDll_PtwAgsCLR.FrageTyp" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.FrageTyp" ref="false" />
      </containers>
    </api>
    <api id="F:IKernDll_PtwAgsCLR.FrageTyp.zusatzleistungsGruppe">
      <apidata name="zusatzleistungsGruppe" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:IKernDll_PtwAgsCLR.FrageTyp" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.FrageTyp" ref="false" />
      </containers>
    </api>
    <api id="T:IKernDll_PtwAgsCLR.IAntwort">
      <apidata name="IAntwort" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:IKernDll_PtwAgsCLR.IAntwort.Text" />
        <element api="P:IKernDll_PtwAgsCLR.IAntwort.Id" />
        <element api="P:IKernDll_PtwAgsCLR.IAntwort.IsValidAnswer" />
      </elements>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
      </containers>
    </api>
    <api id="P:IKernDll_PtwAgsCLR.IAntwort.Id">
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
      </containers>
    </api>
    <api id="P:IKernDll_PtwAgsCLR.IAntwort.IsValidAnswer">
      <apidata name="IsValidAnswer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsValidAnswer" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
      </containers>
    </api>
    <api id="P:IKernDll_PtwAgsCLR.IAntwort.Text">
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Text" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
      </containers>
    </api>
    <api id="T:IKernDll_PtwAgsCLR.IFrage">
      <apidata name="IFrage" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:IKernDll_PtwAgsCLR.IFrageText" ref="true" />
        <type api="T:IKernDll_PtwAgsCLR.IFrageChoice" ref="true" />
        <type api="T:IKernDll_PtwAgsCLR.IFrageCombo" ref="true" />
        <type api="T:IKernDll_PtwAgsCLR.IFrageZusatzleistungsGruppe" ref="true" />
        <type api="T:IKernDll_PtwAgsCLR.IFrageVorbelegung" ref="true" />
        <type api="T:IKernDll_PtwAgsCLR.IFrageZusatzleistung" ref="true" />
      </implementors>
      <elements>
        <element api="M:IKernDll_PtwAgsCLR.IFrage.PutAntwort(System.String)" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Text" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Id" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Typ" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.IsNormal" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Answer" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.AnswerPossibilities" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Proposal" />
      </elements>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
      </containers>
    </api>
    <api id="P:IKernDll_PtwAgsCLR.IFrage.Answer">
      <apidata name="Answer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Answer" />
      <returns>
        <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
      </returns>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
      </containers>
    </api>
    <api id="P:IKernDll_PtwAgsCLR.IFrage.AnswerPossibilities">
      <apidata name="AnswerPossibilities" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_AnswerPossibilities" />
      <returns>
        <type api="T:IKernDll_PtwAgsCLR.AntwortListe" ref="true" />
      </returns>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
      </containers>
    </api>
    <api id="P:IKernDll_PtwAgsCLR.IFrage.Id">
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
      </containers>
    </api>
    <api id="P:IKernDll_PtwAgsCLR.IFrage.IsNormal">
      <apidata name="IsNormal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsNormal" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
      </containers>
    </api>
    <api id="P:IKernDll_PtwAgsCLR.IFrage.Proposal">
      <apidata name="Proposal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Proposal" />
      <returns>
        <type api="T:IKernDll_PtwAgsCLR.IAntwort" ref="true" />
      </returns>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
      </containers>
    </api>
    <api id="M:IKernDll_PtwAgsCLR.IFrage.PutAntwort(System.String)">
      <apidata name="PutAntwort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="antwortText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
      </containers>
    </api>
    <api id="P:IKernDll_PtwAgsCLR.IFrage.Text">
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Text" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
      </containers>
    </api>
    <api id="P:IKernDll_PtwAgsCLR.IFrage.Typ">
      <apidata name="Typ" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Typ" />
      <returns>
        <type api="T:IKernDll_PtwAgsCLR.FrageTyp" ref="false" />
      </returns>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
      </containers>
    </api>
    <api id="T:IKernDll_PtwAgsCLR.IFrageChoice">
      <apidata name="IFrageChoice" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
      </implements>
      <elements>
        <element api="M:IKernDll_PtwAgsCLR.IFrage.PutAntwort(System.String)" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Text" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Id" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Typ" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.IsNormal" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Answer" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.AnswerPossibilities" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Proposal" />
      </elements>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
      </containers>
    </api>
    <api id="T:IKernDll_PtwAgsCLR.IFrageCombo">
      <apidata name="IFrageCombo" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
      </implements>
      <elements>
        <element api="M:IKernDll_PtwAgsCLR.IFrage.PutAntwort(System.String)" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Text" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Id" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Typ" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.IsNormal" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Answer" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.AnswerPossibilities" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Proposal" />
      </elements>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
      </containers>
    </api>
    <api id="T:IKernDll_PtwAgsCLR.IFrageText">
      <apidata name="IFrageText" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
      </implements>
      <implementors>
        <type api="T:IKernDll_PtwAgsCLR.IFrageVorbelegung" ref="true" />
        <type api="T:IKernDll_PtwAgsCLR.IFrageZusatzleistung" ref="true" />
      </implementors>
      <elements>
        <element api="M:IKernDll_PtwAgsCLR.IFrage.PutAntwort(System.String)" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Text" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Id" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Typ" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.IsNormal" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Answer" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.AnswerPossibilities" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Proposal" />
      </elements>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
      </containers>
    </api>
    <api id="T:IKernDll_PtwAgsCLR.IFrageVorbelegung">
      <apidata name="IFrageVorbelegung" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:IKernDll_PtwAgsCLR.IFrageText" ref="true" />
        <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
      </implements>
      <elements>
        <element api="M:IKernDll_PtwAgsCLR.IFrageVorbelegung.SetPropertyValue(System.String,System.String)" />
        <element api="P:IKernDll_PtwAgsCLR.IFrageVorbelegung.PropertyValues" />
        <element api="M:IKernDll_PtwAgsCLR.IFrage.PutAntwort(System.String)" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Text" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Id" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Typ" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.IsNormal" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Answer" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.AnswerPossibilities" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Proposal" />
      </elements>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
      </containers>
    </api>
    <api id="P:IKernDll_PtwAgsCLR.IFrageVorbelegung.PropertyValues">
      <apidata name="PropertyValues" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_PropertyValues" />
      <returns>
        <type api="T:IKernDll_PtwAgsCLR.VorbelegungPropertyValueCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.IFrageVorbelegung" ref="true" />
      </containers>
    </api>
    <api id="M:IKernDll_PtwAgsCLR.IFrageVorbelegung.SetPropertyValue(System.String,System.String)">
      <apidata name="SetPropertyValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.IFrageVorbelegung" ref="true" />
      </containers>
    </api>
    <api id="T:IKernDll_PtwAgsCLR.IFrageZusatzleistung">
      <apidata name="IFrageZusatzleistung" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:IKernDll_PtwAgsCLR.IFrageText" ref="true" />
        <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
      </implements>
      <elements>
        <element api="M:IKernDll_PtwAgsCLR.IFrage.PutAntwort(System.String)" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Text" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Id" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Typ" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.IsNormal" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Answer" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.AnswerPossibilities" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Proposal" />
      </elements>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
      </containers>
    </api>
    <api id="T:IKernDll_PtwAgsCLR.IFrageZusatzleistungsGruppe">
      <apidata name="IFrageZusatzleistungsGruppe" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:IKernDll_PtwAgsCLR.IFrage" ref="true" />
      </implements>
      <elements>
        <element api="M:IKernDll_PtwAgsCLR.IFrage.PutAntwort(System.String)" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Text" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Id" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Typ" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.IsNormal" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Answer" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.AnswerPossibilities" />
        <element api="P:IKernDll_PtwAgsCLR.IFrage.Proposal" />
      </elements>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
      </containers>
    </api>
    <api id="T:IKernDll_PtwAgsCLR.IKernDll">
      <apidata name="IKernDll" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:IKernDll_PtwAgsCLR.IKernDll.ClearMessages" />
        <element api="P:IKernDll_PtwAgsCLR.IKernDll.SystemName" />
        <element api="P:IKernDll_PtwAgsCLR.IKernDll.HasMessage" />
        <element api="P:IKernDll_PtwAgsCLR.IKernDll.Messages" />
        <element api="P:IKernDll_PtwAgsCLR.IKernDll.Fragen" />
      </elements>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
      </containers>
    </api>
    <api id="M:IKernDll_PtwAgsCLR.IKernDll.ClearMessages">
      <apidata name="ClearMessages" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.IKernDll" ref="true" />
      </containers>
    </api>
    <api id="P:IKernDll_PtwAgsCLR.IKernDll.Fragen">
      <apidata name="Fragen" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Fragen" />
      <returns>
        <type api="T:IKernDll_PtwAgsCLR.FrageList" ref="true" />
      </returns>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.IKernDll" ref="true" />
      </containers>
    </api>
    <api id="P:IKernDll_PtwAgsCLR.IKernDll.HasMessage">
      <apidata name="HasMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_HasMessage" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.IKernDll" ref="true" />
      </containers>
    </api>
    <api id="P:IKernDll_PtwAgsCLR.IKernDll.Messages">
      <apidata name="Messages" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Messages" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.IKernDll" ref="true" />
      </containers>
    </api>
    <api id="P:IKernDll_PtwAgsCLR.IKernDll.SystemName">
      <apidata name="SystemName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SystemName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.IKernDll" ref="true" />
      </containers>
    </api>
    <api id="T:IKernDll_PtwAgsCLR.SBSException">
      <apidata name="SBSException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:IKernDll_PtwAgsCLR.SBSInterfaceException" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="M:IKernDll_PtwAgsCLR.SBSException.#ctor" />
        <element api="M:IKernDll_PtwAgsCLR.SBSException.#ctor(System.String)" />
        <element api="M:IKernDll_PtwAgsCLR.SBSException.#ctor(System.String,System.Exception)" />
        <element api="M:IKernDll_PtwAgsCLR.SBSException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:IKernDll_PtwAgsCLR.SBSException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline this type of method across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <setter name="set_HelpLink">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </setter>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </setter>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <setter name="set_HResult">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </setter>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
      </containers>
    </api>
    <api id="M:IKernDll_PtwAgsCLR.SBSException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.SBSException" ref="true" />
      </containers>
    </api>
    <api id="M:IKernDll_PtwAgsCLR.SBSException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.SBSException" ref="true" />
      </containers>
    </api>
    <api id="M:IKernDll_PtwAgsCLR.SBSException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.SBSException" ref="true" />
      </containers>
    </api>
    <api id="M:IKernDll_PtwAgsCLR.SBSException.#ctor(System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.SBSException" ref="true" />
      </containers>
    </api>
    <api id="M:IKernDll_PtwAgsCLR.SBSException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.SBSException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.SecurityPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="Demand" />
            </enumValue>
          </argument>
          <assignment name="SerializationFormatter">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:IKernDll_PtwAgsCLR.SBSInterfaceException">
      <apidata name="SBSInterfaceException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:IKernDll_PtwAgsCLR.SBSException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="M:IKernDll_PtwAgsCLR.SBSInterfaceException.#ctor(System.String)" />
        <element api="M:IKernDll_PtwAgsCLR.SBSException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline this type of method across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <setter name="set_HelpLink">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </setter>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </setter>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <setter name="set_HResult">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </setter>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
      </containers>
    </api>
    <api id="M:IKernDll_PtwAgsCLR.SBSInterfaceException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.SBSInterfaceException" ref="true" />
      </containers>
    </api>
    <api id="T:IKernDll_PtwAgsCLR.VorbelegungPropertyValueCollection">
      <apidata name="VorbelegungPropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:IKernDll_PtwAgsCLR.VorbelegungPropertyValueCollection.#ctor" />
        <element api="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
          <apidata name="Add" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline this type of method across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
          <apidata name="Add" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="keyValuePair">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:System.Collections.Generic.IDictionary`2" />
                      <template name="TValue" index="1" api="T:System.Collections.Generic.IDictionary`2" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
          <apidata name="Contains" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="keyValuePair">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:System.Collections.Generic.IDictionary`2" />
                      <template name="TValue" index="1" api="T:System.Collections.Generic.IDictionary`2" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
          <apidata name="Remove" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="keyValuePair">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:System.Collections.Generic.IDictionary`2" />
                      <template name="TValue" index="1" api="T:System.Collections.Generic.IDictionary`2" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.Collections.Generic.ICollection`1.Clear">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:System.Collections.Generic.IDictionary`2" />
                      <template name="TValue" index="1" api="T:System.Collections.Generic.IDictionary`2" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
            <member api="M:System.Collections.IDictionary.Clear">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
          <apidata name="ContainsKey" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
                </specialization>
              </type>
            </member>
            <member api="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)">
              <type api="T:System.Collections.Generic.IReadOnlyDictionary`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
          <apidata name="ContainsValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2.Enumerator" ref="false">
              <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
                </specialization>
              </type>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:System.Collections.Generic.IDictionary`2" />
                      <template name="TValue" index="1" api="T:System.Collections.Generic.IDictionary`2" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)">
          <apidata name="OnDeserialization" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sender">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)">
              <type api="T:System.Runtime.Serialization.IDeserializationCallback" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
          <apidata name="Remove" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
          <apidata name="TryGetValue" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="value" out="true">
              <referenceTo>
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </referenceTo>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
                </specialization>
              </type>
            </member>
            <member api="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
              <type api="T:System.Collections.Generic.IReadOnlyDictionary`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="array">
              <arrayOf rank="1">
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
                  </specialization>
                </type>
              </arrayOf>
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:System.Collections.Generic.IDictionary`2" />
                      <template name="TValue" index="1" api="T:System.Collections.Generic.IDictionary`2" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline this type of method across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="array">
              <type api="T:System.Array" ref="true" />
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Collections.IEnumerable.GetEnumerator">
              <type api="T:System.Collections.IEnumerable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <apidata name="Add" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <apidata name="Contains" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Collections.IDictionary.Contains(System.Object)">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <returns>
            <type api="T:System.Collections.IDictionaryEnumerator" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Collections.IDictionary.GetEnumerator">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <apidata name="Remove" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Collections.IDictionary.Remove(System.Object)">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.Comparer">
          <apidata name="Comparer" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Comparer">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.Count">
          <apidata name="Count" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Count" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.ICollection`1.Count">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:System.Collections.Generic.IDictionary`2" />
                      <template name="TValue" index="1" api="T:System.Collections.Generic.IDictionary`2" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
            <member api="P:System.Collections.ICollection.Count">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
            <member api="P:System.Collections.Generic.IReadOnlyCollection`1.Count">
              <type api="T:System.Collections.Generic.IReadOnlyCollection`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:System.Collections.Generic.IReadOnlyDictionary`2" />
                      <template name="TValue" index="1" api="T:System.Collections.Generic.IReadOnlyDictionary`2" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.Keys">
          <apidata name="Keys" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Keys" />
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2.KeyCollection" ref="true">
              <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
                </specialization>
              </type>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
          <apidata name="Keys" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys" />
          <returns>
            <type api="T:System.Collections.Generic.ICollection`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.IDictionary`2.Keys">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Keys">
          <apidata name="Keys" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.IReadOnlyDictionary`2.Keys">
              <type api="T:System.Collections.Generic.IReadOnlyDictionary`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.Values">
          <apidata name="Values" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Values" />
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2.ValueCollection" ref="true">
              <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
                </specialization>
              </type>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
          <apidata name="Values" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values" />
          <returns>
            <type api="T:System.Collections.Generic.ICollection`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.IDictionary`2.Values">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Values">
          <apidata name="Values" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.IReadOnlyDictionary`2.Values">
              <type api="T:System.Collections.Generic.IReadOnlyDictionary`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.Item(`0)">
          <apidata name="Item" group="member" subgroup="property" />
          <memberdata visibility="public" default="true" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Item" />
          <setter name="set_Item">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </setter>
          <parameters>
            <parameter name="key">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.IDictionary`2.Item(`0)">
              <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
                </specialization>
              </type>
            </member>
            <member api="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
              <type api="T:System.Collections.Generic.IReadOnlyDictionary`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{T}#IsReadOnly">
          <apidata name="IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
              <type api="T:System.Collections.Generic.ICollection`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <template name="TKey" index="0" api="T:System.Collections.Generic.IDictionary`2" />
                      <template name="TValue" index="1" api="T:System.Collections.Generic.IDictionary`2" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
          <apidata name="IsSynchronized" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.ICollection.IsSynchronized" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.IsSynchronized">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
          <apidata name="SyncRoot" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.ICollection.SyncRoot" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.ICollection.SyncRoot">
              <type api="T:System.Collections.ICollection" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize">
          <apidata name="IsFixedSize" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.IDictionary.IsFixedSize" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.IsFixedSize">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly">
          <apidata name="IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.IDictionary.IsReadOnly" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.IsReadOnly">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys">
          <apidata name="Keys" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.IDictionary.Keys">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.Collections.ICollection" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.Keys">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values">
          <apidata name="Values" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" />
          <getter name="get_System.Collections.IDictionary.Values">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.Collections.ICollection" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.Values">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <apidata name="Item" group="member" subgroup="property" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <propertydata get="true" set="true" />
          <getter name="get_System.Collections.IDictionary.Item" />
          <setter name="set_System.Collections.IDictionary.Item" />
          <parameters>
            <parameter name="key">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Collections.IDictionary.Item(System.Object)">
              <type api="T:System.Collections.IDictionary" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
      </containers>
    </api>
    <api id="M:IKernDll_PtwAgsCLR.VorbelegungPropertyValueCollection.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="IKernDll_PtwAgsCLR" module="IKernDll_PtwAgsCLR" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:IKernDll_PtwAgsCLR" />
        <type api="T:IKernDll_PtwAgsCLR.VorbelegungPropertyValueCollection" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>